/*
 * 문제: 백준 1436번 - 영화감독 숌
 * 링크: https://www.acmicpc.net/problem/1436
 * 분류: 브루트포스, 문자열
 *
 * 문제 설명:
 * - '666'이 연속으로 들어가는 수를 종말의 수라고 한다.
 * - N번째로 작은 종말의 수를 구하는 문제.
 *   (예: 1번째 666, 2번째 1666, 3번째 2666, ...)
 *
 * 입력:
 * - 첫째 줄에 자연수 N (1 ≤ N ≤ 10,000)
 *
 * 출력:
 * - N번째 종말의 수를 출력한다.
 *
 * 접근 방법:
 * - 666부터 1씩 증가시키며, 해당 수에 '666'이 포함되어 있으면 카운트 증가.
 * - 카운트가 N이 되면 해당 수를 출력한다.
 * - 브루트포스 방식이지만 N이 10,000 이하이므로 시간 내에 해결 가능하다.
 *
 * 시간복잡도: O(N * K) (K: 각 수의 자릿수, 최대 7자리)
 * 공간복잡도: O(1)
 */

#include <iostream>
#include <string>
using namespace std;

int main() {
    int N;
    cin >> N;

    int count = 0;      // 종말의 수를 센다
    int num = 666;      // 666부터 시작

    while (true) {
        // 숫자에 '666'이 포함되어 있는지 문자열로 변환해 확인
        if (to_string(num).find("666") != string::npos) {
            count++;
            if (count == N) break; // N번째 종말의 수라면 종료
        }
        num++;
    }
    cout << num << '\n'; // 결과 출력
    return 0;
}
