/*
 * 문제: 백준 10989번 - 수 정렬하기 3
 * 링크: https://www.acmicpc.net/problem/10989
 * 분류: 정렬, 구현, 카운팅 정렬
 * 
 * 문제 설명:
 * - N개의 수가 주어졌을 때, 이를 오름차순으로 정렬하는 프로그램을 작성하는 문제.
 * - 입력되는 수의 개수 N은 최대 10,000,000개이며, 각 수는 1~10,000 사이의 자연수이다.
 * 
 * 입력:
 * - 첫째 줄에 수의 개수 N(1 ≤ N ≤ 10,000,000)이 주어진다.
 * - 둘째 줄부터 N개의 줄에 숫자가 하나씩 주어진다.
 * 
 * 출력:
 * - 오름차순으로 정렬한 결과를 한 줄에 하나씩 출력한다.
 * 
 * 접근 방법:
 * - N이 매우 크고 메모리 제한이 8MB로 매우 빡빡하므로, 모든 수를 배열에 저장해 정렬하면 메모리 초과가 발생한다[1][2][5].
 * - 각 수의 범위가 1~10,000로 제한되어 있으므로, 카운팅 정렬(Counting Sort)을 사용한다[2][3][6][7].
 *   - 입력받은 숫자의 빈도(등장 횟수)를 세는 배열을 만든다.
 *   - 1부터 10,000까지 각 숫자를 빈도만큼 출력한다.
 * - 입출력 속도를 높이기 위해 scanf/printf 또는 cin.tie(0), ios::sync_with_stdio(false) 등을 사용한다.
 * 
 * 시간복잡도: O(N)
 * 공간복잡도: O(숫자 범위) = O(10,000)
 */

#include <iostream>
using namespace std;

int main() {
    ios::sync_with_stdio(false); // 입출력 속도 향상
    cin.tie(0);

    int N;
    cin >> N;
    const int MAX = 10000;
    int count[MAX + 1] = {0}; // 1~10000까지 등장 횟수 저장

    // 입력받으면서 각 숫자의 등장 횟수 카운트
    for (int i = 0; i < N; ++i) {
        int num;
        cin >> num;
        count[num]++;
    }

    // 1~10000까지 각 숫자를 등장 횟수만큼 출력
    for (int i = 1; i <= MAX; ++i) {
        while (count[i]--) {
            cout << i << '\n';
        }
    }
    return 0;
}
