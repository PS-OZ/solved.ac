/*
 * 문제: 백준 1676번 - 팩토리얼 0의 개수
 * 링크: https://www.acmicpc.net/problem/1676
 * 분류: 수학, 구현
 *
 * 문제 설명:
 * - N! (팩토리얼)의 값을 계산할 때, 그 값의 끝(오른쪽)에서부터 처음 0이 아닌 숫자가 나올 때까지의 0의 개수를 구하는 문제.
 *
 * 입력:
 * - 첫째 줄에 정수 N (0 ≤ N ≤ 500)이 주어진다.
 *
 * 출력:
 * - N!의 끝에 있는 0의 개수를 출력한다.
 *
 * 접근 방법:
 * - N!의 끝에 0이 생기는 것은 곱셈 과정에서 10이 만들어질 때마다다.
 * - 10 = 2 × 5이므로, 곱셈 과정에서 2와 5가 짝지어질 때마다 0이 하나씩 생긴다.
 * - 하지만 2는 5보다 훨씬 많이 등장하므로, 5의 개수만 세면 된다.
 * - 5의 배수뿐만 아니라 25, 125 등 5의 거듭제곱 배수도 추가로 5를 더 제공하므로, N을 5, 25, 125, ...로 나누어 몫을 모두 더한다.
 *
 * 시간복잡도: O(log₅N)
 * 공간복잡도: O(1)
 */

#include <iostream>
using namespace std;

int main() {
    int N;
    cin >> N;
    int count = 0;

    // 5, 25, 125, ...로 나누어 몫을 계속 더함
    for (int i = 5; i <= N; i *= 5) {
        count += N / i;
    }

    cout << count << '\n';
    return 0;
}
