/*
 * 문제: 백준 2164번 - 카드2
 * 링크: https://www.acmicpc.net/problem/2164
 * 분류: 자료구조, 큐, 구현
 *
 * 문제 설명:
 * - 1부터 N까지 번호가 붙은 N장의 카드가 있다.
 * - 제일 위에 있는 카드를 버리고, 그 다음 위에 있는 카드를 제일 아래로 옮기는 과정을 반복한다.
 * - 카드가 한 장 남을 때까지 이 작업을 반복할 때, 마지막에 남는 카드를 구하는 문제.
 *
 * 입력:
 * - 첫째 줄에 정수 N (1 ≤ N ≤ 500,000)
 *
 * 출력:
 * - 마지막에 남는 카드의 번호를 출력한다.
 *
 * 접근 방법:
 * - 큐(Queue) 자료구조를 사용하여 카드를 관리한다.
 *   1. 큐의 맨 앞(제일 위) 카드를 버린다(pop).
 *   2. 그 다음 맨 앞 카드를 맨 뒤로 보낸다(push).
 *   3. 카드가 한 장 남을 때까지 반복한다.
 * - 큐는 FIFO(First In First Out) 구조이므로, 이 문제에 적합하다[1][6][7].
 *
 * 시간복잡도: O(N)
 * 공간복잡도: O(N)
 */

#include <iostream>
#include <queue>
using namespace std;

int main() {
    int N;
    cin >> N;
    queue<int> q;

    // 1부터 N까지 큐에 삽입
    for (int i = 1; i <= N; ++i) {
        q.push(i);
    }

    // 카드가 한 장 남을 때까지 반복
    while (q.size() > 1) {
        q.pop(); // 맨 위 카드 버리기
        q.push(q.front()); // 다음 카드를 맨 뒤로 보내기
        q.pop(); // 맨 앞 카드(이미 맨 뒤로 보냈으니 제거)
    }

    // 마지막 남은 카드 출력
    cout << q.front() << '\n';
    return 0;
}
